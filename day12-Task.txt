mysql> create database day12;
Query OK, 1 row affected (0.02 sec)

mysql> use day12;
Database changed
mysql> CREATE TABLE students (student_id INT PRIMARY KEY,name VARCHAR(50),department VARCHAR(50));
Query OK, 0 rows affected (0.03 sec)

mysql> CREATE TABLE marks (mark_id INT PRIMARY KEY,student_id INT,subject VARCHAR(50),marks INT,FOREIGN KEY (student_id) REFERENCES students(student_id)
    -> );
Query OK, 0 rows affected (0.04 sec)

mysql> INSERT INTO students (student_id, name, department) VALUES(1, 'Alice', 'Computer Science'),(2, 'Bob', 'Mathematics'),(3, 'Charlie', 'Physics');
Query OK, 3 rows affected (0.01 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> INSERT INTO marks (mark_id, student_id, subject, marks) VALUES
    -> (101, 1, 'Math', 85),
    -> (102, 1, 'Science', 90),
    -> (103, 2, 'Math', 78),
    -> (104, 3, 'Science', 88);
Query OK, 4 rows affected (0.01 sec)
Records: 4  Duplicates: 0  Warnings: 0

mysql> select * from students;
+------------+---------+------------------+
| student_id | name    | department       |
+------------+---------+------------------+
|          1 | Alice   | Computer Science |
|          2 | Bob     | Mathematics      |
|          3 | Charlie | Physics          |
+------------+---------+------------------+
3 rows in set (0.00 sec)

mysql> select * from marks;
+---------+------------+---------+-------+
| mark_id | student_id | subject | marks |
+---------+------------+---------+-------+
|     101 |          1 | Math    |    85 |
|     102 |          1 | Science |    90 |
|     103 |          2 | Math    |    78 |
|     104 |          3 | Science |    88 |
+---------+------------+---------+-------+
4 rows in set (0.00 sec)

mysql> SELECT 
    ->     students.student_id,
    ->     students.name,
    ->     students.department,
    ->     marks.subject,
    ->     marks.marks
    -> FROM students
    -> INNER JOIN marks
    -> ON students.student_id = marks.student_id;
+------------+---------+------------------+---------+-------+
| student_id | name    | department       | subject | marks |
+------------+---------+------------------+---------+-------+
|          1 | Alice   | Computer Science | Math    |    85 |
|          1 | Alice   | Computer Science | Science |    90 |
|          2 | Bob     | Mathematics      | Math    |    78 |
|          3 | Charlie | Physics          | Science |    88 |
+------------+---------+------------------+---------+-------+
4 rows in set (0.00 sec)

mysql> SELECT s.name, s.department, m.total_marks
    -> FROM students s
    -> JOIN (
    ->     SELECT student_id, SUM(marks) AS total_marks
    ->     FROM marks
    ->     GROUP BY student_id
    ->     HAVING SUM(marks) = (
    ->         SELECT MAX(total_marks)
    ->         FROM (
    ->             SELECT student_id, SUM(marks) AS total_marks
    ->             FROM marks
    ->             GROUP BY student_id
    ->         ) AS totals
    ->     )
    -> ) m ON s.student_id = m.student_id
    -> );
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')' at line 16
mysql> SELECT s.name, s.department, m.total_marks
    -> FROM students s
    -> JOIN (
    ->     SELECT student_id, SUM(marks) AS total_marks
    ->     FROM marks
    ->     GROUP BY student_id
    ->     HAVING SUM(marks) = (
    ->         SELECT MAX(total_marks)
    ->         FROM (
    ->             SELECT student_id, SUM(marks) AS total_marks
    ->             FROM marks
    ->             GROUP BY student_id
    ->         ) AS totals
    ->     )
    -> ) m ON s.student_id = m.student_id;
+-------+------------------+-------------+
| name  | department       | total_marks |
+-------+------------------+-------------+
| Alice | Computer Science |         175 |
+-------+------------------+-------------+
1 row in set (0.01 sec)

mysql> CREATE TABLE Customers (customer_id INT PRIMARY KEY,name VARCHAR(50),city VARCHAR(50));
Query OK, 0 rows affected (0.02 sec)

mysql> CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT,order_date DATE,amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)
    -> );
Query OK, 0 rows affected (0.06 sec)

mysql> INSERT INTO Customers (customer_id, name, city) VALUES
    -> (1, 'Alice', 'Delhi'),
    -> (2, 'Bob', 'Mumbai'),
    -> (3, 'Charlie', 'Chennai'),
    -> (4, 'David', 'Kolkata');
Query OK, 4 rows affected (0.01 sec)
Records: 4  Duplicates: 0  Warnings: 0

mysql> INSERT INTO Orders (order_id, customer_id, order_date, amount) VALUES
    -> (101, 1, '2025-06-01', 2500.00),
    -> (102, 2, '2025-06-02', 1800.00),
    -> (103, 1, '2025-06-03', 1200.00),
    -> (104, 3, '2025-06-04', 2000.00),
    -> (105, 2, '2025-06-05', 1500.00);
Query OK, 5 rows affected (0.01 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> select * from customers;
+-------------+---------+---------+
| customer_id | name    | city    |
+-------------+---------+---------+
|           1 | Alice   | Delhi   |
|           2 | Bob     | Mumbai  |
|           3 | Charlie | Chennai |
|           4 | David   | Kolkata |
+-------------+---------+---------+
4 rows in set (0.00 sec)

mysql> select * from orders;
+----------+-------------+------------+---------+
| order_id | customer_id | order_date | amount  |
+----------+-------------+------------+---------+
|      101 |           1 | 2025-06-01 | 2500.00 |
|      102 |           2 | 2025-06-02 | 1800.00 |
|      103 |           1 | 2025-06-03 | 1200.00 |
|      104 |           3 | 2025-06-04 | 2000.00 |
|      105 |           2 | 2025-06-05 | 1500.00 |
+----------+-------------+------------+---------+
5 rows in set (0.00 sec)

mysql> SELECT 
    ->     Customers.customer_id,
    ->     Customers.name,
    ->     Customers.city,
    ->     Orders.order_id,
    ->     Orders.order_date,
    ->     Orders.amount
    -> FROM Customers
    -> LEFT JOIN Orders
    -> ON Customers.customer_id = Orders.customer_id;
+-------------+---------+---------+----------+------------+---------+
| customer_id | name    | city    | order_id | order_date | amount  |
+-------------+---------+---------+----------+------------+---------+
|           1 | Alice   | Delhi   |      101 | 2025-06-01 | 2500.00 |
|           1 | Alice   | Delhi   |      103 | 2025-06-03 | 1200.00 |
|           2 | Bob     | Mumbai  |      102 | 2025-06-02 | 1800.00 |
|           2 | Bob     | Mumbai  |      105 | 2025-06-05 | 1500.00 |
|           3 | Charlie | Chennai |      104 | 2025-06-04 | 2000.00 |
|           4 | David   | Kolkata |     NULL | NULL       |    NULL |
+-------------+---------+---------+----------+------------+---------+
6 rows in set (0.00 sec)

mysql> CREATE TABLE Customers (
    ->     customer_id INT PRIMARY KEY,
    ->     name VARCHAR(50),
    ->     city VARCHAR(50)
    -> );
ERROR 1050 (42S01): Table 'customers' already exists
mysql> CREATE TABLE Orders (
    ->     order_id INT PRIMARY KEY,
    ->     customer_id INT,
    ->     order_date DATE,
    ->     FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)
    -> );
ERROR 1050 (42S01): Table 'orders' already exists
mysql> CREATE TABLE OrderDetails (
    ->     detail_id INT PRIMARY KEY,
    ->     order_id INT,
    ->     product_name VARCHAR(50),
    ->     quantity INT,
    ->     price DECIMAL(10, 2),
    ->     FOREIGN KEY (order_id) REFERENCES Orders(order_id)
    -> );
Query OK, 0 rows affected (0.04 sec)

mysql> SELECT 
    ->     c.name AS customer_name,
    ->     c.city,
    ->     o.order_id,
    ->     o.order_date,
    ->     d.product_name,
    ->     d.quantity,
    ->     d.price,
    ->     (d.quantity * d.price) AS total_amount
    -> FROM Customers c
    -> JOIN Orders o ON c.customer_id = o.customer_id
    -> JOIN OrderDetails d ON o.order_id = d.order_id
    -> WHERE c.city = 'Delhi'
    ->   AND o.order_date BETWEEN '2025-06-01' AND '2025-06-30'
    ->   AND d.product_name LIKE '%Laptop%'
    ->   AND (d.quantity * d.price) > 2000;
Empty set (0.01 sec)

mysql> SELECT 
    ->     c.name AS customer_name,
    ->     c.city,
    ->     o.order_id,
    ->     o.order_date,
    ->     d.product_name,
    ->     d.quantity,
    ->     d.price,
    ->     (d.quantity * d.price) AS total_amount
    -> FROM Customers c
    -> JOIN Orders o ON c.customer_id = o.customer_id
    -> JOIN OrderDetails d ON o.order_id = d.order_id
    -> WHERE c.city = 'Delhi'
    ->   AND o.order_date BETWEEN '2025-06-01' AND '2025-06-30'
    ->   AND d.product_name LIKE '%Laptop%'
    ->   AND (d.quantity * d.price) > 2000;
Empty set (0.00 sec)

mysql> notee;
